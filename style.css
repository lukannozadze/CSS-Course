* {
  margin: 0;
  padding: 0;

  box-sizing: border-box;
}
html{
  overflow-x: hidden;
}
/* specificity value 1+1=2 */
main > div > section {
  background-color: green;
}

/* specificity value 1+10=11 */
main > div > .american-bull-section {
  background-color: yellow;
}

/* specificity value 1+100=101 */
main > div > #akita-section {
  background-color: red;
}

/* specificity value 100 */
#akita-section {
  background-color: aqua;
}
/* conclusion: selector with specificity of 101 overrides selector with specificity of 100; despite of the last mentioned is later in the code */

/* specificity value 1+2=2 */
header > img {
  width: 40px;
  height: 40px;
}

/* specificity value 10 */
.header-icon {
  width: 100px !important;
  height: 100px !important;
}

/* specificity value 100+1=101 */
#header-id > img {
  width: 45px;
  height: 50px;
}

/* specificity value 100+10=110 */
#header-id > .header-icon {
  width: 60px;
  height: 70px;
}
/* conclusion: at first glance last option with specificity of 110 should override every other, but !important rule(second option) overrides all(except inline styling)  */

/* specificity 100 with rule !important will override second option */
#main-container {
  background-color: black ;
  min-height: 100vh;
}
/* specificity value 1 + rule !important */
main {
  background-color: bisque;

}
/* conclusion: only way to override rule !important is  selector with !important rule but with more specificity also*/
main > div > section {
  border: 10px solid greenyellow;
}
#header-id > nav > ul {
  list-style: none;
  display: flex;
  gap: 12px;
}
header {
  padding-left: 30px;
  padding-right: 30px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  background-color: cadetblue;
}
section > img {
  max-width: 100%;
}
section {
  display: flex;
  flex-direction: column;
  align-items: center;
  font-size: clamp(1rem, 10vw, 2rem); 
}
footer {
  padding: 20px;
  background-color: cadetblue;
  display: flex;
  justify-content: center;
}
.parent{
    background-color: blue;
}
/* .child{
    width: 50%;
    height: 100px;
    background-color: tomato;
    animation: left-to-right 1s forwards infinite ease alternate;
} */

/* .parent:hover .child{
    
  animation-play-state: paused;
} */

button{
    width: 50px;
    height: 30px;
    background-color: lightgreen;
}
button:hover{
    animation: grow 0.5s forwards ease ;
}

 .grid-container{
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-columns: repeat(auto-fit,minmax(400px,1fr));
  grid-auto-rows: 500px;
  align-content: end;
  
} 


@keyframes left-to-right{
    0% {
        transform: translateX(0);
        background-color: tomato;
    }
     33% {
        transform: translateY(100%);
    }
    66% {
        transform: translateX(100%) translateY(100%);
    }
    100% {
        transform: translateX(100%);
        background-color: green;
    }
}
@keyframes grow{
    0%{
        width: 50px;
        height: 40px;
        background-color: green;
    }
    33%{
        width: 60px;
        height: 45px;
        background-color: darkgreen;
    }
    66%{
        width: 70px;
        height: 55px;
        background-color: lightblue;
    }
    100%{
        width: 80px;
        height: 65px;
        background-color: blue;
    }

  
}

@media only screen and (width<900px) and (width>700px){
  #main-container{
    background-color: tomato;
  }
  header{
    background-color: red;
  }
}